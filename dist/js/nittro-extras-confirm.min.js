_context.invoke("Nittro.Extras.Confirm",function(Dialog,Arrays,ReflectionClass){var Confirm=_context.extend(Dialog,function(options){if(!(this instanceof Confirm)){var dlg=ReflectionClass.from(Confirm).newInstanceArgs(arguments);return window.setTimeout(function(){dlg.show()},1),dlg}Confirm.Super.call(this,this._prepareOptions(arguments)),this._.promise=new Promise(function(fulfill,reject){this.on("button",function(evt){this.destroy(),"confirm"===evt.data.value?fulfill():reject()})}.bind(this))},{STATIC:{defaults:{classes:"nittro-dialog-confirm",buttons:{confirm:"OK",cancel:{label:"Cancel",type:"text"}},keyMap:{Enter:"confirm",Escape:"cancel"}},setDefaults:function(defaults){Arrays.mergeTree(Confirm.defaults,defaults)}},_prepareOptions:function(args){var options=args[0];return"string"==typeof options&&(options={text:options},args.length>1&&(options.buttons={confirm:args[1]},args.length>2?"string"==typeof args[2]?options.buttons.cancel={label:args[2],type:"text"}:options.buttons.cancel=args[2]:options.buttons.cancel={label:"Cancel",type:"text"})),options},then:function(onfulfill,onreject){return this._.promise.then(onfulfill,onreject)}});_context.register(Confirm,"Confirm")},{Dialog:"Nittro.Extras.Dialogs.Dialog",ReflectionClass:"Utils.ReflectionClass",Arrays:"Utils.Arrays"}),_context.invoke("Nittro.Extras.Confirm",function(Manager,Confirm){var ConfirmMixin={createConfirm:function(options){var dlg=Confirm.apply(null,arguments);return this._setup(dlg),dlg}};_context.mixin(Manager,ConfirmMixin)},{Manager:"Nittro.Extras.Dialogs.Manager"});